{"ast":null,"code":"import _toConsumableArray from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/romanpolevac/Documents/GitHub/react-lab/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App/App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\n\nfunction testFunc() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"ADD_TRACK\") {\n    return [].concat(_toConsumableArray(state), [action.payload]);\n  }\n\n  console.log(action);\n  return state;\n}\n\nvar store = createStore(testFunc);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})), document.getElementById(\"root\"));\nserviceWorker.unregister();\nconsole.log(store.getState());\nstore.subscribe(function () {\n  console.log(\"subscribe\", store.getState());\n});\nstore.dispatch({\n  type: \"ADD_TRACK\",\n  payload: \"test1\"\n});","map":{"version":3,"sources":["/Users/romanpolevac/Documents/GitHub/react-lab/src/index.js"],"names":["React","ReactDOM","App","Provider","serviceWorker","createStore","testFunc","state","action","type","payload","console","log","store","render","document","getElementById","unregister","getState","subscribe","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,SAASC,QAAT,GAAsC;AAAA,MAApBC,KAAoB,uEAAZ,EAAY;AAAA,MAARC,MAAQ;;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,wCAAWF,KAAX,IAAkBC,MAAM,CAACE,OAAzB;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,SAAOD,KAAP;AACD;;AAED,IAAMM,KAAK,GAAGR,WAAW,CAACC,QAAD,CAAzB;AAEAL,QAAQ,CAACa,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAMAZ,aAAa,CAACa,UAAd;AAEAN,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACK,QAAN,EAAZ;AAEAL,KAAK,CAACM,SAAN,CAAgB,YAAM;AACpBR,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,KAAK,CAACK,QAAN,EAAzB;AACD,CAFD;AAIAL,KAAK,CAACO,QAAN,CAAe;AAAEX,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,OAAO,EAAE;AAA9B,CAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App/App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\n\nfunction testFunc(state = [], action) {\n  if (action.type === \"ADD_TRACK\") {\n    return [...state, action.payload];\n  }\n  console.log(action);\n  return state;\n}\n\nconst store = createStore(testFunc);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n\nconsole.log(store.getState());\n\nstore.subscribe(() => {\n  console.log(\"subscribe\", store.getState());\n});\n\nstore.dispatch({ type: \"ADD_TRACK\", payload: \"test1\" });\n"]},"metadata":{},"sourceType":"module"}