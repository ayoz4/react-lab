{"ast":null,"code":"import _classCallCheck from \"/Users/roman/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/roman/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/roman/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/roman/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/roman/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/roman/Documents/GitHub/react-lab/src/containers/Content/containers/modal/Modal.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Portal from \"./components/Portal\";\nimport \"../../styled/Modal.css\";\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Modal, _React$Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      description: \"\"\n    };\n\n    _this.handleCloseAddGoodModal = function () {\n      _this.props.onClose();\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleAddGood = _this$props.handleAddGood,\n          onChange = _this$props.onChange;\n      return React.createElement(\"div\", {\n        className: \"ordModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modalOverlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modalWindow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modalHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modalTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Create a good\")), React.createElement(\"div\", {\n        className: \"modalBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"name\",\n        name: \"name\",\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"description\",\n        name: \"description\",\n        onChange: onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"modalFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleCloseAddGoodModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"button\", {\n        onClick: handleAddGood,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return Modal;\n}(React.Component);\n\nModal.propTypes = {\n  title: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  children: PropTypes.node\n};\nModal.defaultProps = {\n  title: \"Title\",\n  isOpen: false,\n  onCancel: function onCancel() {},\n  onSubmit: function onSubmit() {}\n};\nexport default Modal;","map":{"version":3,"sources":["/Users/roman/Documents/GitHub/react-lab/src/containers/Content/containers/modal/Modal.jsx"],"names":["React","PropTypes","Portal","Modal","state","name","description","handleCloseAddGoodModal","props","onClose","handleAddGood","onChange","Component","propTypes","title","string","isOpen","bool","onCancel","func","onSubmit","children","node","defaultProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,wBAAP;;IAEMC,K;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,WAAW,EAAE;AAFP,K;;UAKRC,uB,GAA0B,YAAM;AAC9B,YAAKC,KAAL,CAAWC,OAAX;AACD,K;;;;;;;6BAEQ;AAAA,wBAC6B,KAAKD,KADlC;AAAA,UACCE,aADD,eACCA,aADD;AAAA,UACgBC,QADhB,eACgBA,QADhB;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,WAAW,EAAC,MAAnB;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,QAAQ,EAAEA,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAC,aADd;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,QAAQ,EAAEA,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CAJF,EAgBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKJ,uBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,QAAA,OAAO,EAAEG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAhBF,CADF,CADF,CADF;AA2BD;;;;EAxCiBV,KAAK,CAACY,S;;AA2C1BT,KAAK,CAACU,SAAN,GAAkB;AAChBC,EAAAA,KAAK,EAAEb,SAAS,CAACc,MADD;AAEhBC,EAAAA,MAAM,EAAEf,SAAS,CAACgB,IAFF;AAGhBC,EAAAA,QAAQ,EAAEjB,SAAS,CAACkB,IAHJ;AAIhBC,EAAAA,QAAQ,EAAEnB,SAAS,CAACkB,IAJJ;AAKhBE,EAAAA,QAAQ,EAAEpB,SAAS,CAACqB;AALJ,CAAlB;AAQAnB,KAAK,CAACoB,YAAN,GAAqB;AACnBT,EAAAA,KAAK,EAAE,OADY;AAEnBE,EAAAA,MAAM,EAAE,KAFW;AAGnBE,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CAHC;AAInBE,EAAAA,QAAQ,EAAE,oBAAM,CAAE;AAJC,CAArB;AAOA,eAAejB,KAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Portal from \"./components/Portal\";\nimport \"../../styled/Modal.css\";\n\nclass Modal extends React.Component {\n  state = {\n    name: \"\",\n    description: \"\"\n  };\n\n  handleCloseAddGoodModal = () => {\n    this.props.onClose();\n  };\n\n  render() {\n    const { handleAddGood, onChange } = this.props;\n\n    return (\n      <div className=\"ordModal\">\n        <div className=\"modalOverlay\">\n          <div className=\"modalWindow\">\n            <div className=\"modalHeader\">\n              <div className=\"modalTitle\">Create a good</div>\n            </div>\n            <div className=\"modalBody\">\n              <div>\n                <input placeholder=\"name\" name=\"name\" onChange={onChange} />\n              </div>\n              <div>\n                <input\n                  placeholder=\"description\"\n                  name=\"description\"\n                  onChange={onChange}\n                />\n              </div>\n            </div>\n            <div className=\"modalFooter\">\n              <button onClick={this.handleCloseAddGoodModal}>Cancel</button>\n              <button onClick={handleAddGood}>Submit</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  title: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  children: PropTypes.node\n};\n\nModal.defaultProps = {\n  title: \"Title\",\n  isOpen: false,\n  onCancel: () => {},\n  onSubmit: () => {}\n};\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}