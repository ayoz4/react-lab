{"ast":null,"code":"import _classCallCheck from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/romanpolevac/Documents/GitHub/react-lab/src/lesson/Lesson.jsx\";\nimport React, { Component } from \"react\";\n\nvar Calculator = function Calculator(_ref) {\n  var counter = _ref.counter;\n  return console.log(), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, \"Counter component. Counter value is: \".concat(counter));\n};\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counter: 0\n    };\n\n    _this.handleClick = function () {\n      _this.setState(function (_ref2) {\n        var counter = _ref2.counter;\n        return {\n          counter: ++counter\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      var counter = this.state.counter;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, counter), React.createElement(Calculator, {\n        counter: counter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"+1\"));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/romanpolevac/Documents/GitHub/react-lab/src/lesson/Lesson.jsx"],"names":["React","Component","Calculator","counter","console","log","Counter","state","handleClick","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SACjBC,OAAO,CAACC,GAAR,IAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAA6CF,OAA7C,EADE;AAAA,CAAnB;;IAIMG,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNJ,MAAAA,OAAO,EAAE;AADH,K;;UAIRK,W,GAAc,YAAM;AAClB,YAAKC,QAAL,CAAc;AAAA,YAAGN,OAAH,SAAGA,OAAH;AAAA,eAAkB;AAC9BA,UAAAA,OAAO,EAAE,EAAEA;AADmB,SAAlB;AAAA,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA,UACCA,OADD,GACa,KAAKI,KADlB,CACCJ,OADD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMA,OAAN,CADF,EAEE,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAEA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKK,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF;AAOD;;;;EArBmBP,S;;AAwBtB,eAAeK,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nconst Calculator = ({ counter }) => (\n  console.log(), <h1>{`Counter component. Counter value is: ${counter}`}</h1>\n);\n\nclass Counter extends Component {\n  state = {\n    counter: 0\n  };\n\n  handleClick = () => {\n    this.setState(({ counter }) => ({\n      counter: ++counter\n    }));\n  };\n\n  render() {\n    const { counter } = this.state;\n\n    return (\n      <div>\n        <div>{counter}</div>\n        <Calculator counter={counter} />\n        <button onClick={this.handleClick}>+1</button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}