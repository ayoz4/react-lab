{"ast":null,"code":"import _classCallCheck from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/romanpolevac/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/romanpolevac/Documents/GitHub/react-lab/src/containers/MainLayoutContainer/components/Content.jsx\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nvar Content =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Content, _Component);\n\n  function Content() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Content);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Content)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleAddGood = function () {\n      _this.setState({\n        text: \"\"\n      });\n\n      _this.props.onAddGood();\n\n      console.log(\"addGood\", _this.trackInput.value);\n      console.log(\"store\", _this.props.testStore);\n    };\n\n    return _this;\n  }\n\n  _createClass(Content, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.testStore);\n      var testStore = this.props.testStore;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"name\",\n        ref: function ref(input) {\n          _this2.trackInput = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleAddGood.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Add +\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, testStore.map(function (value, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, value);\n      })));\n    }\n  }]);\n\n  return Content;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    testStore: state\n  };\n}, function (dispatch) {\n  return {\n    onAddGood: function onAddGood(goodName) {\n      dispatch({\n        type: \"ADD_TRACK\",\n        payload: goodName\n      });\n    }\n  };\n})(Content);","map":{"version":3,"sources":["/Users/romanpolevac/Documents/GitHub/react-lab/src/containers/MainLayoutContainer/components/Content.jsx"],"names":["React","Component","PropTypes","connect","Content","handleAddGood","setState","text","props","onAddGood","console","log","trackInput","value","testStore","input","bind","map","index","state","dispatch","goodName","type","payload"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,O;;;;;;;;;;;;;;;;;;UAGJC,a,GAAgB,YAAM;AACpB,YAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;;AAIA,YAAKC,KAAL,CAAWC,SAAX;;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,MAAKC,UAAL,CAAgBC,KAAvC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,MAAKH,KAAL,CAAWM,SAAhC;AACD,K;;;;;;;6BAEQ;AAAA;;AACPJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWM,SAAvB;AADO,UAGCA,SAHD,GAGe,KAAKN,KAHpB,CAGCM,SAHD;AAKP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAC,MADd;AAEE,QAAA,GAAG,EAAE,aAAAC,KAAK,EAAI;AACZ,UAAA,MAAI,CAACH,UAAL,GAAkBG,KAAlB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKV,aAAL,CAAmBW,IAAnB,CAAwB,IAAxB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,SAAS,CAACG,GAAV,CAAc,UAACJ,KAAD,EAAQK,KAAR;AAAA,eACb;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBL,KAAjB,CADa;AAAA,OAAd,CADH,CAVF,CADF;AAkBD;;;;EArCmBZ,S;;AAwCtB,eAAeE,OAAO,CACpB,UAAAgB,KAAK;AAAA,SAAK;AACRL,IAAAA,SAAS,EAAEK;AADH,GAAL;AAAA,CADe,EAIpB,UAAAC,QAAQ;AAAA,SAAK;AACXX,IAAAA,SAAS,EAAE,mBAAAY,QAAQ,EAAI;AACrBD,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,WADC;AAEPC,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID;AANU,GAAL;AAAA,CAJY,CAAP,CAYbjB,OAZa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Content extends Component {\n  store;\n\n  handleAddGood = () => {\n    this.setState({\n      text: \"\"\n    });\n\n    this.props.onAddGood();\n\n    console.log(\"addGood\", this.trackInput.value);\n    console.log(\"store\", this.props.testStore);\n  };\n\n  render() {\n    console.log(this.props.testStore);\n\n    const { testStore } = this.props;\n\n    return (\n      <div>\n        <input\n          placeholder=\"name\"\n          ref={input => {\n            this.trackInput = input;\n          }}\n        />\n        <button type=\"submit\" onClick={this.handleAddGood.bind(this)}>\n          Add +\n        </button>\n        <ul>\n          {testStore.map((value, index) => (\n            <li key={index}>{value}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    testStore: state\n  }),\n  dispatch => ({\n    onAddGood: goodName => {\n      dispatch({\n        type: \"ADD_TRACK\",\n        payload: goodName\n      });\n    }\n  })\n)(Content);\n"]},"metadata":{},"sourceType":"module"}