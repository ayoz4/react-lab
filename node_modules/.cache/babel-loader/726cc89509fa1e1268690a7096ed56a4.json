{"ast":null,"code":"import _toConsumableArray from \"/Users/roman/Documents/GitHub/react-lab/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ADD_USER } from \"../constants\";\nvar USERS = [{\n  userName: \"Roman\",\n  password: \"admin\",\n  isAdmin: \"true\"\n}, {\n  userName: \"Qwe\",\n  password: \"student\",\n  isAdmin: \"false\"\n}];\n\nvar users = function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : USERS;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      username = _ref.username,\n      password = _ref.password,\n      isAdmin = _ref.isAdmin,\n      type = _ref.type;\n\n  switch (type) {\n    case ADD_USER:\n      return [].concat(_toConsumableArray(state), [{\n        username: username,\n        password: password,\n        isAdmin: isAdmin\n      }]);\n\n    default:\n      return state;\n  }\n};\n\nexport default users;","map":{"version":3,"sources":["/Users/roman/Documents/GitHub/react-lab/src/reducers/users.js"],"names":["ADD_USER","USERS","userName","password","isAdmin","users","state","username","type"],"mappings":";AAAA,SAASA,QAAT,QAAyB,cAAzB;AAEA,IAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,QAAQ,EAAE,OADZ;AAEEC,EAAAA,QAAQ,EAAE,OAFZ;AAGEC,EAAAA,OAAO,EAAE;AAHX,CADY,EAMZ;AACEF,EAAAA,QAAQ,EAAE,KADZ;AAEEC,EAAAA,QAAQ,EAAE,SAFZ;AAGEC,EAAAA,OAAO,EAAE;AAHX,CANY,CAAd;;AAaA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAA0D;AAAA,MAAzDC,KAAyD,uEAAjDL,KAAiD;;AAAA;AAAA,MAAxCM,QAAwC,QAAxCA,QAAwC;AAAA,MAA9BJ,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,OAAoB,QAApBA,OAAoB;AAAA,MAAXI,IAAW,QAAXA,IAAW;;AACtE,UAAQA,IAAR;AACE,SAAKR,QAAL;AACE,0CACKM,KADL,IAEE;AACEC,QAAAA,QAAQ,EAARA,QADF;AAEEJ,QAAAA,QAAQ,EAARA,QAFF;AAGEC,QAAAA,OAAO,EAAPA;AAHF,OAFF;;AAQF;AACE,aAAOE,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeD,KAAf","sourcesContent":["import { ADD_USER } from \"../constants\";\n\nconst USERS = [\n  {\n    userName: \"Roman\",\n    password: \"admin\",\n    isAdmin: \"true\"\n  },\n  {\n    userName: \"Qwe\",\n    password: \"student\",\n    isAdmin: \"false\"\n  }\n];\n\nconst users = (state = USERS, { username, password, isAdmin, type }) => {\n  switch (type) {\n    case ADD_USER:\n      return [\n        ...state,\n        {\n          username,\n          password,\n          isAdmin\n        }\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default users;\n"]},"metadata":{},"sourceType":"module"}